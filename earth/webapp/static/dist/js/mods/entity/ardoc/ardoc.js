define(function(require,exports,module){var t=require("scaffold/path"),e=global_validateHelper,o=global_config.root,n=Backbone.Model.extend({urlRoot:"./",initialize:function(t,e){e||(e={}),this.structure=e.structure||null},validate:function(t){var o,n,r,a,i;if(o=this.structure)for(var l in t)if(r=t[l],n=o.getBlockStructure(l),"object"==typeof r&&n){for(var c in r)if(i=r[c],a=n.getColumn({interalName:c}),!a||a.length<1)console.log(l+"块中有未验证的字段："+c);else if(a=a[0],e.validate(i,a.dataType)!==!0)return"error"}else console.log("有未验证的区块："+l)},extractDataToColumns:function(){var t,e=this.toJSON(),o={};for(var n in e)t=e[n],_.isString(t)?o[n]=t:_.isObject(t)&&_.defaults(o,t);return o},parse:function(t){return t.data?t.data:t}}),r=Backbone.Collection.extend({model:n,initialize:function(t,e){this.taskId=e.taskId,this.projectId=e.projectId},url:function(){return t.join(o,"ar/data",this.projectId,this.taskId)},extractDataToColumns:function(){var t=_.map(this.models,function(t){return t.extractDataToColumns()});return t},removeHandler:function(){}});exports.ARRecordModel=n,exports.ARRecordCollection=r});